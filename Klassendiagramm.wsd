@startuml "Reservierungssystem"

class Ticket{
    - ticketID: String
    - status: enum{gültig, ungültig, abgeschlossen}
    - saalID: String
    - vorstellungsID: String
    - sitzplatz: String
    - tarif: enum Tarif{Erwachsene, Kind, Ermäßigt}

    + statusAendern()
    + validieren()
    + ticketStornieren()
}

class Sitzplatz{
    - reihe: String
    - nummer: int
    - kategorie: enum Kategorie{Standard, Premium, D-Box}
    + getInfo()
}

class Saal{
    - saalID: String
    - barrierefrei: Bool

    {static}+ saalErstellen()
    {static}+ saalLoeschen()
    + saalBearbeiten()
    + getSitzpleaetze()
    + löschen()
}

class Film{
    - name: String
    - fskKennzeichnung: String
    - omdbId: String

    {static}+ filmAngebot():Film[]
    {static}+ filmErstellen()
    {static}+ filmLoeschen()
    + getInfo()
    + getOmdbId()
}

class Vorstellung{
    - vorstellungsID: String
    - datum: String
    - uhrzeit: String
    - freieSitze: Sitzplatz[*]

    {static}+ vorstellungErstellen()
    {static}+ aktuelleVorstellungen():Vorstellung[]
    + getInfo()
    + sitzplatzBuchen(Sitzplatz)
    + sitzplatzFreigeben(Sitzplatz)
    + getSitzplaetze(): map<Sitzplatz, Boolean> 
    + preisFestlegen()
}

class Buchung{
    - buchungsID: String
    - status: enum Status{offen, storniert, bezahlt}
    - zahlungsmethode: enum Zahlungsmethode{Kreditkarte, Paypal, Lastschrift}

    {static}+ buchungErstellen()
    + statusAendern()
    + sitzplätzeWählen()
    + buchungStornieren()
    + buchungAbschließen()

}

class Account{
    - name: String
    - email: String
    - rolle: enum Rolle{Admin, Mitarbeiter, User}

    {static}+ accountErstellen()
    + getInfo()
}

Saal "1"*--"*" Sitzplatz: enthält Sitze

Vorstellung "0..*" -- "1" Saal: hat
Vorstellung "0..*" -- "1" Film: zeigt

Buchung "0..*"--"1" Account
Buchung "0..*"-"1" Vorstellung
Buchung "1" *- "1..*" Ticket

@enduml